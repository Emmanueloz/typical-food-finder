---
import { any } from "astro:schema";
import { config } from "../../config";
import Layout from "../../layouts/Layout.astro";
import type { Place } from "../../models/places";

export const prerender = false;

const place = Astro.url.searchParams.get("place") ?? "Ocosingo";

const getPlaces = async (location: string) => {
  const url = `https://tripadvisor16.p.rapidapi.com/api/v1/restaurant/searchLocation?query=${location}`;
  const options = {
    method: "GET",
    headers: {
      "x-rapidapi-key": `${config.X_RAPID_API_KEY}`,
      "x-rapidapi-host": "tripadvisor16.p.rapidapi.com",
    },
  };

  try {
    const res = await fetch(url, options);
    const body = await res.json();

    const places: Array<any> | null = body.data;
    console.log(body);

    return places?.map((place) => {
      const urlImg = place.thumbnail.photoSizeDynamic.uriTemplate;
      console.log(urlImg);

      return {
        id: place.id,
        locationId: place.locationId,
        placeType: place.placeType,
        localizedName: place.localizedName,
        imageUrl: "",
      };
    });
  } catch (error) {
    console.error(error);

    return [];
  }
};

const places = await getPlaces(place);
---

<Layout>
  <h1>Lugares</h1>
  <form method="get" action="/places">
    <label for="place">Lugar</label>
    <input
      type="search"
      name="place"
      id="place"
      placeholder="Lugar"
      value=`${place}`
    />
    <button type="submit">Buscar</button>
  </form>
  <ul>
    {
      places?.map((place: any) => (
        <article>
          <h2>
            <a href={`/places/${place.locationId}`}>{place.localizedName}</a>
          </h2>
          <small>{place.placeType}</small>
          <p>{place.address}</p>
        </article>
      ))
    }
  </ul>
</Layout>
